name: Deploy Final Editor to GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'final-editor/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: final-editor
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true

    - name: Setup Node.js (for WASM build)
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup C build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential clang emscripten

    - name: Build WASM core
      run: |
        cd ../src
        # Build the C core to WASM
        emcc -O3 -s WASM=1 -s EXPORTED_FUNCTIONS='[
          "_note_md_to_json",
          "_note_json_to_md", 
          "_note_json_canonicalize",
          "_note_version",
          "_malloc",
          "_free"
        ]' -s EXPORTED_RUNTIME_METHODS='["ccall","cwrap"]' \
        -s ALLOW_MEMORY_GROWTH=1 \
        -s MODULARIZE=1 \
        -s EXPORT_NAME='createNoteCore' \
        -I. \
        markdown.c json.c editor.c \
        -o ../final-editor/web/assets/core/note_core.js
        
        # Copy WASM file to assets
        cp ../final-editor/web/assets/core/note_core.wasm ../final-editor/assets/core/

    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Run tests with coverage
      run: |
        flutter test --coverage
        
    - name: Generate coverage report
      run: |
        sudo apt-get install -y lcov
        genhtml coverage/lcov.info -o coverage/html
        
    - name: Check coverage threshold
      run: |
        COVERAGE=$(lcov --summary coverage/lcov.info | grep -E "lines\.\.\.\.\.\." | sed 's/.*lines......: \([0-9.]*\)%.*/\1/')
        echo "Coverage: ${COVERAGE}%"
        if (( $(echo "${COVERAGE} < 80.0" | bc -l) )); then
          echo "❌ Coverage ${COVERAGE}% is below 80% threshold"
          exit 1
        else
          echo "✅ Coverage ${COVERAGE}% meets 80% threshold"
        fi

    - name: Build web app
      run: |
        flutter build web \
          --web-renderer canvaskit \
          --base-href "/c-editor/" \
          --release \
          --dart-define=FLUTTER_WEB_CANVASKIT_URL=https://unpkg.com/canvaskit-wasm@0.39.1/bin/

    - name: Copy WASM assets to build
      run: |
        mkdir -p build/web/assets/core
        cp assets/core/* build/web/assets/core/

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: final-editor/build/web

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4