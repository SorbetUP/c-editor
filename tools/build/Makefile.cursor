# Makefile for C Cursor Management Library
# Compiles to both native binary and WebAssembly

CC = clang
EMCC = emcc

# Source files
CURSOR_SOURCES = src/cursor_manager.c src/cursor_wasm.c
CURSOR_HEADERS = src/cursor_manager.h

# Output files
NATIVE_BINARY = cursor_test
WASM_OUTPUT = cursor_wasm.js
WASM_WASM = cursor_wasm.wasm

# Compiler flags
CFLAGS = -std=c11 -Wall -Wextra -Werror -O2 -g
EMCC_FLAGS = -std=c11 -O2 -s WASM=1 -s EXPORTED_RUNTIME_METHODS='["cwrap","ccall"]' \
             -s ALLOW_MEMORY_GROWTH=1 -s MODULARIZE=1 -s EXPORT_NAME="CursorModule" \
             --no-entry -s EXPORTED_FUNCTIONS='["_malloc","_free","_cursor_wasm_html_to_markdown","_cursor_wasm_adjust_for_formatting","_cursor_wasm_is_inside_formatting","_cursor_wasm_get_formatting_type","_cursor_wasm_handle_enter_key","_cursor_wasm_split_line","_cursor_wasm_merge_lines","_cursor_wasm_validate_position","_cursor_wasm_find_safe_position","_cursor_wasm_free","_cursor_wasm_debug"]'

# Debug flags
DEBUG_FLAGS = -DDEBUG_CURSOR=1
RELEASE_FLAGS = -DDEBUG_CURSOR=0 -DNDEBUG

.PHONY: all clean native wasm test debug

# Default target
all: native wasm

# Compile native binary for testing
native: $(NATIVE_BINARY)

$(NATIVE_BINARY): $(CURSOR_SOURCES) $(CURSOR_HEADERS)
	$(CC) $(CFLAGS) $(DEBUG_FLAGS) $(CURSOR_SOURCES) -o $(NATIVE_BINARY)
	@echo "âœ… Native binary compiled: $(NATIVE_BINARY)"

# Compile WebAssembly module
wasm: $(WASM_OUTPUT)

$(WASM_OUTPUT): $(CURSOR_SOURCES) $(CURSOR_HEADERS)
	$(EMCC) $(EMCC_FLAGS) $(RELEASE_FLAGS) $(CURSOR_SOURCES) -o $(WASM_OUTPUT)
	@echo "âœ… WebAssembly module compiled: $(WASM_OUTPUT)"

# Debug version with more output
debug:
	$(CC) $(CFLAGS) $(DEBUG_FLAGS) -DDEBUG_VERBOSE=1 $(CURSOR_SOURCES) -o $(NATIVE_BINARY)_debug
	@echo "âœ… Debug binary compiled: $(NATIVE_BINARY)_debug"

# Test native binary
test: $(NATIVE_BINARY)
	@echo "ðŸ§ª Running cursor management tests..."
	@echo "Test 1: Basic position mapping"
	@echo "Test 2: Formatting adjustment"  
	@echo "Test 3: Enter key handling"
	@echo "Test 4: Line splitting"
	@echo "Note: Implement test cases in main() function for comprehensive testing"

# Clean build artifacts
clean:
	rm -f $(NATIVE_BINARY) $(NATIVE_BINARY)_debug
	rm -f $(WASM_OUTPUT) $(WASM_WASM)
	rm -f *.o *.wasm.map
	@echo "ðŸ§¹ Clean completed"

# Install WebAssembly files to docs directory
install: wasm
	cp $(WASM_OUTPUT) docs/
	cp $(WASM_WASM) docs/
	@echo "ðŸ“¦ WebAssembly files installed to docs/"

# Development build with hot reload
dev: debug
	@echo "ðŸ”„ Development build ready"
	@echo "ðŸ’¡ Use 'make install' to deploy to docs/"

# Production build
prod: clean wasm install
	@echo "ðŸš€ Production build completed and installed"

# Help
help:
	@echo "C Cursor Management Library Build System"
	@echo ""
	@echo "Targets:"
	@echo "  all      - Build both native and WASM (default)"
	@echo "  native   - Build native binary for testing"
	@echo "  wasm     - Build WebAssembly module"
	@echo "  debug    - Build debug version with verbose output"
	@echo "  test     - Run tests on native binary"
	@echo "  install  - Install WASM files to docs/"
	@echo "  dev      - Development build"
	@echo "  prod     - Production build and install"
	@echo "  clean    - Remove build artifacts"
	@echo "  help     - Show this help"
	@echo ""
	@echo "Files produced:"
	@echo "  $(NATIVE_BINARY)    - Native test binary"
	@echo "  $(WASM_OUTPUT)      - WebAssembly JavaScript interface"
	@echo "  $(WASM_WASM)        - WebAssembly binary module"